{"version":3,"file":"BaseButton-40d08798.js","sources":["../../src/components/Button/BaseButton.vue"],"sourcesContent":["<template>\n  <div style=\"width: max-content\">\n    <button\n        class=\"base-button\"\n        :class=\"classes\"\n        :disabled=\"disabled\"\n        :style=\"customStyle\"\n        :title=\"titleMessage\"\n    >\n      <span v-if=\"loading\">\n        <slot name=\"spinner\">\n          <Spinner\n              data-test-id=\"spinner\"\n              size=\"small\"\n              :color-spinner=\"colorSpinner\"\n          />\n        </slot>\n      </span>\n\n      <span v-else class=\"base-button-content\">\n        <slot name=\"leftIcon\">\n         <i\n             v-if=\"leftIcon\"\n             :class=\"leftIcon\"\n             data-test-id=\"left-icon\"\n         ></i>\n        </slot>\n\n        <slot>Label</slot>\n\n        <slot name=\"rightIcon\">\n          <i\n              v-if=\"rightIcon\"\n              :class=\"rightIcon\"\n              data-test-id=\"right-icon\"\n          ></i>\n        </slot>\n      </span>\n    </button>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Props } from '@/typing/BaseButton'\nimport Spinner from '@/components/Spinner/Spinner.vue'\n\nconst props = withDefaults(defineProps<Props>(), {\n\tdisabled: false,\n\ttooltipMessage: null,\n\tvariant: 'primary',\n\tsize: 'medium',\n\trightIcon: null,\n\tloading: false,\n\tcustomStyle: undefined,\n\tuseBGTransition: true,\n\tuseHover: true\n})\n\nconst titleMessage = computed(() => {\n\treturn props.tooltipMessage ?? props.disabled ? 'This button is disabled.' : ''\n})\n\nconst sizeClass = computed(() => {\n\tswitch (props.size) {\n\tcase 'small':\n\t\treturn 'btn-small'\n\tcase 'medium':\n\t\treturn 'btn-medium'\n\tcase 'large':\n\t\treturn 'btn-large'\n\tdefault:\n\t\tthrow new Error('\"size\" props value passed is not valid.')\n\t}\n})\n\nconst classes = computed(() => {\n\tconst classes = [sizeClass.value, `btn-${props.variant}`, props.customClass]\n\n\tif (props.useBGTransition) {\n\t\tclasses.push('base-button-transition')\n\t}\n\n\tif (props.useHover) {\n\t\tclasses.push('base-button-hover')\n\t}\n\n\treturn classes.filter(Boolean)\n})\n</script>\n\n<style scoped lang=\"scss\">\n.base-button {\n  padding: 10px 20px;\n  border: 1px solid transparent;\n  color: #fff;\n  border-radius: 3em;\n  line-height: 1;\n  cursor: pointer;\n  font-weight: 700;\n  font-family: 'Nuvito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &-transition {\n    transition: background-color 0.3s ease-in-out;\n  }\n\n  &.btn-primary {\n    background-color: #1EA7FD;\n    border-color: #1EA7FD;\n\n    &.base-button-hover:hover {\n      background-color: #0056b3;\n      border-color: #0056b3;\n    }\n  }\n\n  &.btn-success {\n    background-color: #28a745;\n    border-color: #28a745;\n\n    &.base-button-hover:hover {\n      background-color: #1e7e34;\n      border-color: #1e7e34;\n    }\n  }\n\n  &.btn-danger {\n    background-color: #dc3545;\n    border-color: #dc3545;\n\n    &.base-button-hover:hover {\n      background-color: #c82333;\n      border-color: #c82333;\n    }\n  }\n\n  &.btn-outline-primary {\n    background-color: transparent;\n    border-color: #007bff;\n    color: #007bff;\n\n    &.base-button-hover:hover {\n      background-color: #007bff;\n      color: #fff;\n    }\n  }\n\n  &.btn-outline-success {\n    background-color: transparent;\n    border-color: #28a745;\n    color: #28a745;\n\n    &.base-button-hover:hover {\n      background-color: #28a745;\n      color: #fff;\n    }\n  }\n\n  &.btn-outline-danger {\n    background-color: transparent;\n    border-color: #dc3545;\n    color: #dc3545;\n\n    &.base-button-hover:hover {\n      background-color: #dc3545;\n      color: #fff;\n    }\n  }\n\n  &.btn-dark {\n    background-color: black;\n    border-color: black;\n    color: white;\n\n    &.base-button-hover:hover {\n      background-color: #424242;\n    }\n  }\n\n  &.btn-outline-dark {\n    background-color: transparent;\n    border-color: black;\n    color: black;\n\n    &.base-button-hover:hover {\n      background-color: #969696;\n    }\n  }\n\n  &.btn-small {\n    height: 3em;\n    min-width: 8em;\n    font-size: 0.8rem;\n    padding: 5px 10px;\n  }\n\n  &.btn-medium {\n    height: 3em;\n    min-width: 10em;\n    font-size: 0.9rem;\n    padding: 10px 20px;\n  }\n\n  &.btn-large {\n    min-height: 3em;\n    min-width: 12em;\n    font-size: 1rem;\n    padding: 15px 30px;\n  }\n\n  &[disabled] {\n    background-color: gray;\n    border-color: gray;\n    cursor: auto;\n    &.base-button-hover:hover {\n      background-color: gray;\n      border-color: gray;\n    }\n  }\n\n  .base-button-content {\n    display: flex;\n    min-width: max-content;\n    justify-content: center;\n    align-items: center;\n    gap: 0.7em;\n\n    icon {\n      margin-top: 5px;\n    }\n  }\n}\n</style>\n"],"names":["props","__props","titleMessage","computed","sizeClass","classes"],"mappings":"+pBA+CA,MAAMA,EAAQC,EAYRC,EAAeC,EAAS,IACtBH,EAAM,gBAAkBA,EAAM,SAAW,2BAA6B,EAC7E,EAEKI,EAAYD,EAAS,IAAM,CAChC,OAAQH,EAAM,KAAM,CACpB,IAAK,QACG,MAAA,YACR,IAAK,SACG,MAAA,aACR,IAAK,QACG,MAAA,YACR,QACO,MAAA,IAAI,MAAM,yCAAyC,CAC1D,CAAA,CACA,EAEKK,EAAUF,EAAS,IAAM,CACxBE,MAAAA,EAAU,CAACD,EAAU,MAAO,OAAOJ,EAAM,OAAO,GAAIA,EAAM,WAAW,EAE3E,OAAIA,EAAM,iBACTK,EAAQ,KAAK,wBAAwB,EAGlCL,EAAM,UACTK,EAAQ,KAAK,mBAAmB,EAG1BA,EAAQ,OAAO,OAAO,CAAA,CAC7B"}